{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Year(props) {\n  var year = props.year,\n    currentMonth = props.currentMonth,\n    currentYear = props.currentYear,\n    styles = props.styles,\n    onSelectYear = props.onSelectYear,\n    textStyle = props.textStyle,\n    minDate = props.minDate,\n    maxDate = props.maxDate;\n  var yearOutOfRange;\n  var yearIsBeforeMin = false;\n  var yearIsAfterMax = false;\n  var yearIsDisabled = false;\n  if (maxDate) {\n    yearIsAfterMax = year > maxDate.year();\n  }\n  if (minDate) {\n    yearIsBeforeMin = year < minDate.year();\n  }\n  yearOutOfRange = yearIsAfterMax || yearIsBeforeMin || yearIsDisabled;\n  var onSelect = function onSelect() {\n    var month = currentMonth;\n    var currentMonthYear = moment({\n      year: currentYear,\n      month: month\n    });\n    if (maxDate && currentMonthYear.isAfter(maxDate, 'month')) {\n      month = maxDate.month();\n    }\n    if (minDate && currentMonthYear.isBefore(minDate, 'month')) {\n      month = minDate.month();\n    }\n    onSelectYear({\n      month: month,\n      year: year\n    });\n  };\n  return _jsx(View, {\n    style: [styles.yearContainer],\n    children: !yearOutOfRange ? _jsx(TouchableOpacity, {\n      onPress: onSelect,\n      children: _jsx(Text, {\n        style: [styles.yearText, textStyle],\n        children: year\n      })\n    }) : _jsx(Text, {\n      style: [textStyle, styles.disabledText],\n      children: year\n    })\n  });\n}\nYear.propTypes = {\n  styles: PropTypes.shape({}),\n  year: PropTypes.number,\n  onSelectYear: PropTypes.func\n};","map":{"version":3,"names":["React","PropTypes","moment","Year","props","year","currentMonth","currentYear","styles","onSelectYear","textStyle","minDate","maxDate","yearOutOfRange","yearIsBeforeMin","yearIsAfterMax","yearIsDisabled","onSelect","month","currentMonthYear","isAfter","isBefore","yearContainer","yearText","disabledText","propTypes","shape","number","func"],"sources":["E:/навчання/програмування/frontend/my-app/node_modules/react-native-calendar-picker/CalendarPicker/Year.js"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport default function Year(props) {\n  const {\n    year,\n    currentMonth,\n    currentYear,\n    styles,\n    onSelectYear,\n    textStyle,\n    minDate,\n    maxDate,\n  } = props;\n\n  let yearOutOfRange;\n  let yearIsBeforeMin = false;\n  let yearIsAfterMax = false;\n  let yearIsDisabled = false;\n\n  // Check whether year is outside of min/max range.\n  if (maxDate) {\n    yearIsAfterMax = year > maxDate.year();\n  }\n  if (minDate) {\n    yearIsBeforeMin = year < minDate.year();\n  }\n\n  // ToDo: disabledYears props to disable years separate from disabledDates\n\n  yearOutOfRange = yearIsAfterMax || yearIsBeforeMin || yearIsDisabled;\n\n  const onSelect = () => {\n    // Guard against navigating to months beyond min/max dates.\n    let month = currentMonth;\n    let currentMonthYear = moment({year: currentYear, month});\n    if (maxDate && currentMonthYear.isAfter(maxDate, 'month')) {\n      month = maxDate.month();\n    }\n    if (minDate && currentMonthYear.isBefore(minDate, 'month')) {\n      month = minDate.month();\n    }\n    onSelectYear({month, year});\n  };\n\n  return (\n    <View style={[styles.yearContainer]}>\n      { !yearOutOfRange ?\n        <TouchableOpacity\n          onPress={onSelect}>\n          <Text style={[styles.yearText, textStyle]}>\n            { year }\n          </Text>\n        </TouchableOpacity>\n        :\n        <Text style={[textStyle, styles.disabledText]}>\n          { year }\n        </Text>\n      }\n    </View>\n  );\n}\n\nYear.propTypes = {\n  styles: PropTypes.shape({}),\n  year: PropTypes.number,\n  onSelectYear: PropTypes.func,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAM1B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAE5B,eAAe,SAASC,IAAI,CAACC,KAAK,EAAE;EAClC,IACEC,IAAI,GAQFD,KAAK,CARPC,IAAI;IACJC,YAAY,GAOVF,KAAK,CAPPE,YAAY;IACZC,WAAW,GAMTH,KAAK,CANPG,WAAW;IACXC,MAAM,GAKJJ,KAAK,CALPI,MAAM;IACNC,YAAY,GAIVL,KAAK,CAJPK,YAAY;IACZC,SAAS,GAGPN,KAAK,CAHPM,SAAS;IACTC,OAAO,GAELP,KAAK,CAFPO,OAAO;IACPC,OAAO,GACLR,KAAK,CADPQ,OAAO;EAGT,IAAIC,cAAc;EAClB,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,cAAc,GAAG,KAAK;EAC1B,IAAIC,cAAc,GAAG,KAAK;EAG1B,IAAIJ,OAAO,EAAE;IACXG,cAAc,GAAGV,IAAI,GAAGO,OAAO,CAACP,IAAI,EAAE;EACxC;EACA,IAAIM,OAAO,EAAE;IACXG,eAAe,GAAGT,IAAI,GAAGM,OAAO,CAACN,IAAI,EAAE;EACzC;EAIAQ,cAAc,GAAGE,cAAc,IAAID,eAAe,IAAIE,cAAc;EAEpE,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IAErB,IAAIC,KAAK,GAAGZ,YAAY;IACxB,IAAIa,gBAAgB,GAAGjB,MAAM,CAAC;MAACG,IAAI,EAAEE,WAAW;MAAEW,KAAK,EAALA;IAAK,CAAC,CAAC;IACzD,IAAIN,OAAO,IAAIO,gBAAgB,CAACC,OAAO,CAACR,OAAO,EAAE,OAAO,CAAC,EAAE;MACzDM,KAAK,GAAGN,OAAO,CAACM,KAAK,EAAE;IACzB;IACA,IAAIP,OAAO,IAAIQ,gBAAgB,CAACE,QAAQ,CAACV,OAAO,EAAE,OAAO,CAAC,EAAE;MAC1DO,KAAK,GAAGP,OAAO,CAACO,KAAK,EAAE;IACzB;IACAT,YAAY,CAAC;MAACS,KAAK,EAALA,KAAK;MAAEb,IAAI,EAAJA;IAAI,CAAC,CAAC;EAC7B,CAAC;EAED,OACE,KAAC,IAAI;IAAC,KAAK,EAAE,CAACG,MAAM,CAACc,aAAa,CAAE;IAAA,UAChC,CAACT,cAAc,GACf,KAAC,gBAAgB;MACf,OAAO,EAAEI,QAAS;MAAA,UAClB,KAAC,IAAI;QAAC,KAAK,EAAE,CAACT,MAAM,CAACe,QAAQ,EAAEb,SAAS,CAAE;QAAA,UACtCL;MAAI;IACD,EACU,GAEnB,KAAC,IAAI;MAAC,KAAK,EAAE,CAACK,SAAS,EAAEF,MAAM,CAACgB,YAAY,CAAE;MAAA,UAC1CnB;IAAI;EACD,EAEJ;AAEX;AAEAF,IAAI,CAACsB,SAAS,GAAG;EACfjB,MAAM,EAAEP,SAAS,CAACyB,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3BrB,IAAI,EAAEJ,SAAS,CAAC0B,MAAM;EACtBlB,YAAY,EAAER,SAAS,CAAC2B;AAC1B,CAAC"},"metadata":{},"sourceType":"module"}