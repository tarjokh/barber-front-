{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from 'prop-types';\nimport { RecyclerListView, DataProvider, LayoutProvider } from 'recyclerlistview';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CalendarScroller = function (_Component) {\n  _inherits(CalendarScroller, _Component);\n  var _super = _createSuper(CalendarScroller);\n  function CalendarScroller(props) {\n    var _this;\n    _classCallCheck(this, CalendarScroller);\n    _this = _super.call(this, props);\n    _this.goToDate = function (date, delay) {\n      var data = _this.state.data;\n      var _loop = function _loop(i) {\n        if (data[i].isSame(date, 'month')) {\n          if (delay) {\n            setTimeout(function () {\n              return _this.rlv && _this.rlv.scrollToIndex(i, false);\n            }, delay);\n          } else {\n            _this.rlv && _this.rlv.scrollToIndex(i, false);\n          }\n          return \"break\";\n        }\n      };\n      for (var i = 0; i < data.length; i++) {\n        var _ret = _loop(i);\n        if (_ret === \"break\") break;\n      }\n    };\n    _this.scrollLeft = function () {\n      var _this$state = _this.state,\n        currentIndex = _this$state.currentIndex,\n        numVisibleItems = _this$state.numVisibleItems;\n      if (currentIndex === 0) {\n        return;\n      }\n      var newIndex = Math.max(currentIndex - numVisibleItems, 0);\n      _this.rlv && _this.rlv.scrollToIndex(newIndex, true);\n    };\n    _this.scrollRight = function () {\n      var _this$state2 = _this.state,\n        currentIndex = _this$state2.currentIndex,\n        numVisibleItems = _this$state2.numVisibleItems,\n        numMonths = _this$state2.numMonths;\n      var newIndex = Math.min(currentIndex + numVisibleItems, numMonths - 1);\n      _this.rlv && _this.rlv.scrollToIndex(newIndex, true);\n    };\n    _this.shiftMonthsForward = function (currentMonth) {\n      _this.shiftMonths(currentMonth, _this.state.numMonths / 3);\n    };\n    _this.shiftMonthsBackward = function (currentMonth) {\n      _this.shiftMonths(currentMonth, _this.state.numMonths * 2 / 3);\n    };\n    _this.shiftMonths = function (currentMonth, offset) {\n      var prevVisMonth = currentMonth.clone();\n      var newStartMonth = prevVisMonth.clone().subtract(Math.floor(offset), 'months');\n      _this.updateMonths(prevVisMonth, newStartMonth);\n    };\n    _this.updateMonths = function (prevVisMonth, newStartMonth) {\n      if (_this.shifting) {\n        return;\n      }\n      var _this$props = _this.props,\n        minDate = _this$props.minDate,\n        maxDate = _this$props.maxDate,\n        restrictMonthNavigation = _this$props.restrictMonthNavigation;\n      var data = [];\n      var _newStartMonth = newStartMonth;\n      if (minDate && restrictMonthNavigation && newStartMonth.isBefore(minDate, 'month')) {\n        _newStartMonth = moment(minDate);\n      }\n      for (var i = 0; i < _this.state.numMonths; i++) {\n        var date = _newStartMonth.clone().add(i, 'months');\n        if (maxDate && restrictMonthNavigation && date.isAfter(maxDate, 'month')) {\n          break;\n        }\n        data.push(date);\n      }\n      if (data.length < _this.props.maxSimultaneousMonths) {\n        return;\n      }\n      var _loop2 = function _loop2(_i) {\n        if (data[_i].isSame(prevVisMonth, 'month')) {\n          _this.shifting = true;\n          _this.rlv && _this.rlv.scrollToIndex(_i, false);\n          setTimeout(function () {\n            _this.rlv && _this.rlv.scrollToIndex(_i, false);\n            _this.shifting = false;\n          }, 800);\n          return \"break\";\n        }\n      };\n      for (var _i = 0; _i < data.length; _i++) {\n        var _ret2 = _loop2(_i);\n        if (_ret2 === \"break\") break;\n      }\n      _this.setState({\n        data: data,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      });\n    };\n    _this.onVisibleIndicesChanged = function (all, now) {\n      var _this$state3 = _this.state,\n        data = _this$state3.data,\n        numMonths = _this$state3.numMonths,\n        _currentMonth = _this$state3.currentMonth;\n      var _this$props2 = _this.props,\n        updateMonthYear = _this$props2.updateMonthYear,\n        onMonthChange = _this$props2.onMonthChange;\n      var currentIndex = now[0] || all[0];\n      var currentMonth = data[currentIndex];\n      if (!_currentMonth || !_currentMonth.isSame(currentMonth, 'month')) {\n        var currMonth = currentMonth && currentMonth.clone();\n        onMonthChange && onMonthChange(currMonth);\n      }\n      updateMonthYear && updateMonthYear(currentMonth, true);\n      if (currentIndex === 0) {\n        _this.shiftMonthsBackward(currentMonth);\n      } else if (currentIndex > numMonths - 3) {\n        _this.shiftMonthsForward(currentMonth);\n      }\n      _this.setState({\n        currentMonth: currentMonth,\n        currentIndex: currentIndex\n      });\n    };\n    _this.onLayout = function (event) {\n      var containerWidth = event.nativeEvent.layout.width;\n      _this.setState(_objectSpread({\n        numVisibleItems: Math.floor(containerWidth / _this.state.itemWidth)\n      }, _this.updateLayout(_this.props.renderMonthParams.styles)));\n    };\n    _this.rowRenderer = function (type, rowMonth, i, extState) {\n      var _this$props3 = _this.props,\n        updateMonthYear = _this$props3.updateMonthYear,\n        renderMonth = _this$props3.renderMonth;\n      var _updateMonthYear = updateMonthYear(rowMonth),\n        month = _updateMonthYear.currentMonth,\n        year = _updateMonthYear.currentYear;\n      return renderMonth && renderMonth(_objectSpread(_objectSpread({}, extState), {}, {\n        month: month,\n        year: year\n      }));\n    };\n    _this.updateLayout = function (dims) {\n      var itemWidth = dims.containerWidth;\n      var itemHeight = dims.containerHeight;\n      if (dims.dayWrapper && dims.dayWrapper.height) {\n        itemHeight = dims.dayWrapper.height * 6;\n      }\n      var layoutProvider = new LayoutProvider(function () {\n        return 0;\n      }, function (type, dim) {\n        dim.width = itemWidth;\n        dim.height = itemHeight;\n      });\n      return {\n        layoutProvider: layoutProvider,\n        itemHeight: itemHeight,\n        itemWidth: itemWidth\n      };\n    };\n    _this.dataProvider = new DataProvider(function (r1, r2) {\n      return r1 !== r2;\n    });\n    _this.updateMonthsData = function (data) {\n      return {\n        data: data,\n        numMonths: data.length,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      };\n    };\n    _this.state = _objectSpread(_objectSpread(_objectSpread({}, _this.updateLayout(props.renderMonthParams.styles)), _this.updateMonthsData(props.data)), {}, {\n      numVisibleItems: 1\n    });\n    return _this;\n  }\n  _createClass(CalendarScroller, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(prevProps, prevState) {\n      return this.state.data !== prevState.data || this.state.itemHeight !== prevState.itemHeight || this.state.itemWidth !== prevState.itemWidth || this.props.renderMonthParams !== prevProps.renderMonthParams;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var newState = {};\n      var updateState = false;\n      if (this.props.renderMonthParams.styles !== prevProps.renderMonthParams.styles) {\n        updateState = true;\n        newState = this.updateLayout(this.props.renderMonthParams.styles);\n      }\n      if (this.props.data !== prevProps.data) {\n        updateState = true;\n        newState = _objectSpread(_objectSpread({}, newState), this.updateMonthsData(this.props.data));\n      }\n      if (Platform.OS === 'android' && this.props.renderMonthParams.selectedStartDate !== prevProps.renderMonthParams.selectedStartDate) {\n        this.goToDate(this.props.renderMonthParams.selectedStartDate, 100);\n      }\n      if (updateState) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state4 = this.state,\n        data = _this$state4.data,\n        numMonths = _this$state4.numMonths,\n        height = _this$state4.itemHeight,\n        width = _this$state4.itemWidth,\n        layoutProvider = _this$state4.layoutProvider,\n        dataProvider = _this$state4.dataProvider;\n      if (!data || numMonths === 0 || !height) {\n        return null;\n      }\n      return _jsx(View, {\n        style: {\n          width: width,\n          height: height\n        },\n        onLayout: this.onLayout,\n        children: _jsx(RecyclerListView, {\n          ref: function ref(rlv) {\n            return _this2.rlv = rlv;\n          },\n          layoutProvider: layoutProvider,\n          dataProvider: dataProvider,\n          rowRenderer: this.rowRenderer,\n          extendedState: this.props.renderMonthParams,\n          initialRenderIndex: this.props.initialRenderIndex,\n          onVisibleIndicesChanged: this.onVisibleIndicesChanged,\n          isHorizontal: this.props.horizontal,\n          scrollViewProps: {\n            showsHorizontalScrollIndicator: false,\n            snapToInterval: this.props.horizontal ? width : height\n          }\n        })\n      });\n    }\n  }]);\n  return CalendarScroller;\n}(Component);\nCalendarScroller.propTypes = {\n  data: PropTypes.array.isRequired,\n  initialRenderIndex: PropTypes.number,\n  renderMonth: PropTypes.func,\n  renderMonthParams: PropTypes.object.isRequired,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  maxSimultaneousMonths: PropTypes.number,\n  horizontal: PropTypes.bool,\n  updateMonthYear: PropTypes.func,\n  onMonthChange: PropTypes.func\n};\nCalendarScroller.defaultProps = {\n  data: [],\n  renderMonthParams: {\n    styles: {}\n  }\n};\nexport { CalendarScroller as default };","map":{"version":3,"names":["React","Component","PropTypes","RecyclerListView","DataProvider","LayoutProvider","moment","CalendarScroller","props","goToDate","date","delay","data","state","i","isSame","setTimeout","rlv","scrollToIndex","length","scrollLeft","currentIndex","numVisibleItems","newIndex","Math","max","scrollRight","numMonths","min","shiftMonthsForward","currentMonth","shiftMonths","shiftMonthsBackward","offset","prevVisMonth","clone","newStartMonth","subtract","floor","updateMonths","shifting","minDate","maxDate","restrictMonthNavigation","_newStartMonth","isBefore","add","isAfter","push","maxSimultaneousMonths","setState","dataProvider","cloneWithRows","onVisibleIndicesChanged","all","now","_currentMonth","updateMonthYear","onMonthChange","currMonth","onLayout","event","containerWidth","nativeEvent","layout","width","itemWidth","updateLayout","renderMonthParams","styles","rowRenderer","type","rowMonth","extState","renderMonth","month","year","currentYear","dims","itemHeight","containerHeight","dayWrapper","height","layoutProvider","dim","r1","r2","updateMonthsData","prevProps","prevState","newState","updateState","Platform","OS","selectedStartDate","initialRenderIndex","horizontal","showsHorizontalScrollIndicator","snapToInterval","propTypes","array","isRequired","number","func","object","any","bool","defaultProps"],"sources":["E:/навчання/програмування/frontend/my-app/node_modules/react-native-calendar-picker/CalendarPicker/Scroller.js"],"sourcesContent":["// This is a bi-directional infinite scroller.\n// As the beginning & end are reached, the dates are recalculated and the current\n// index adjusted to match the previous visible date.\n// RecyclerListView helps to efficiently recycle instances, but the data that\n// it's fed is finite. Hence the data must be shifted at the ends to appear as\n// an infinite scroller.\n\nimport React, { Component } from 'react';\nimport { View, Platform } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { RecyclerListView, DataProvider, LayoutProvider } from 'recyclerlistview';\nimport moment from 'moment';\n\nexport default class CalendarScroller extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n    initialRenderIndex: PropTypes.number,\n    renderMonth: PropTypes.func,\n    renderMonthParams: PropTypes.object.isRequired,\n    minDate: PropTypes.any,\n    maxDate: PropTypes.any,\n    maxSimultaneousMonths: PropTypes.number,\n    horizontal: PropTypes.bool,\n    updateMonthYear: PropTypes.func,\n    onMonthChange: PropTypes.func,\n  }\n\n  static defaultProps = {\n    data: [],\n    renderMonthParams: { styles: {} },\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.updateLayout = dims => {\n      const itemWidth = dims.containerWidth;\n      let itemHeight = dims.containerHeight;\n      if (dims.dayWrapper && dims.dayWrapper.height) {\n        itemHeight = dims.dayWrapper.height * 6; // max 6 row weeks per month\n      }\n\n      const layoutProvider = new LayoutProvider(\n        () => 0, // only 1 view type\n        (type, dim) => {\n          dim.width = itemWidth;\n          dim.height = itemHeight;\n        }\n      );\n\n      return { layoutProvider, itemHeight, itemWidth };\n    };\n\n    this.dataProvider = new DataProvider((r1, r2) => {\n      return r1 !== r2;\n    });\n\n    this.updateMonthsData = data => {\n      return {\n        data,\n        numMonths: data.length,\n        dataProvider: this.dataProvider.cloneWithRows(data),\n      };\n    };\n\n    this.state = {\n      ...this.updateLayout(props.renderMonthParams.styles),\n      ...this.updateMonthsData(props.data),\n      numVisibleItems: 1, // updated in onLayout\n    };\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    return this.state.data !== prevState.data ||\n      this.state.itemHeight !== prevState.itemHeight ||\n      this.state.itemWidth !== prevState.itemWidth ||\n      this.props.renderMonthParams !== prevProps.renderMonthParams;\n  }\n\n  componentDidUpdate(prevProps) {\n    let newState = {};\n    let updateState = false;\n\n    if (this.props.renderMonthParams.styles !== prevProps.renderMonthParams.styles) {\n      updateState = true;\n      newState = this.updateLayout(this.props.renderMonthParams.styles);\n    }\n\n    if (this.props.data !== prevProps.data) {\n      updateState = true;\n      newState = {...newState, ...this.updateMonthsData(this.props.data)};\n    }\n\n    if (Platform.OS === 'android' &&\n        this.props.renderMonthParams.selectedStartDate !== prevProps.renderMonthParams.selectedStartDate)\n    {\n      // Android unexpectedly jumps to previous month on first selected date.\n      // Scroll RLV to selected date's month.\n      this.goToDate(this.props.renderMonthParams.selectedStartDate, 100);\n    }\n\n    if (updateState) {\n      this.setState(newState);\n    }\n  }\n\n  goToDate = (date, delay) => {\n    const data = this.state.data;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].isSame(date, 'month')) {\n        if (delay) {\n          setTimeout(() =>  this.rlv && this.rlv.scrollToIndex(i, false), delay);\n        }\n        else {\n          this.rlv && this.rlv.scrollToIndex(i, false);\n        }\n        break;\n      }\n    }\n  }\n\n  // Scroll left, guarding against start index.\n  scrollLeft = () => {\n    const { currentIndex, numVisibleItems } = this.state;\n    if (currentIndex === 0) {\n      return;\n    }\n    const newIndex = Math.max(currentIndex - numVisibleItems, 0);\n    this.rlv && this.rlv.scrollToIndex(newIndex, true);\n  }\n\n  // Scroll right, guarding against end index.\n  scrollRight = () => {\n    const { currentIndex, numVisibleItems, numMonths } = this.state;\n    const newIndex = Math.min(currentIndex + numVisibleItems, numMonths - 1);\n    this.rlv && this.rlv.scrollToIndex(newIndex, true);\n  }\n\n  // Shift dates when end of list is reached.\n  shiftMonthsForward = currentMonth => {\n    this.shiftMonths(currentMonth, this.state.numMonths / 3);\n  }\n\n  // Shift dates when beginning of list is reached.\n  shiftMonthsBackward = currentMonth => {\n    this.shiftMonths(currentMonth, this.state.numMonths * 2/3);\n  }\n\n  shiftMonths = (currentMonth, offset) => {\n    const prevVisMonth = currentMonth.clone();\n    const newStartMonth = prevVisMonth.clone().subtract(Math.floor(offset), 'months');\n    this.updateMonths(prevVisMonth, newStartMonth);\n  }\n\n  updateMonths = (prevVisMonth, newStartMonth) => {\n    if (this.shifting) {\n      return;\n    }\n    const {\n      minDate,\n      maxDate,\n      restrictMonthNavigation,\n    } = this.props;\n    const data = [];\n    let _newStartMonth = newStartMonth;\n    if (minDate && restrictMonthNavigation && newStartMonth.isBefore(minDate, 'month')) {\n      _newStartMonth = moment(minDate);\n    }\n    for (let i = 0; i < this.state.numMonths; i++) {\n      let date = _newStartMonth.clone().add(i, 'months');\n      if (maxDate && restrictMonthNavigation && date.isAfter(maxDate, 'month')) {\n        break;\n      }\n      data.push(date);\n    }\n    // Prevent reducing range when the minDate - maxDate range is small.\n    if (data.length < this.props.maxSimultaneousMonths) {\n      return;\n    }\n\n    // Scroll to previous date\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].isSame(prevVisMonth, 'month')) {\n        this.shifting = true;\n        this.rlv && this.rlv.scrollToIndex(i, false);\n        // RecyclerListView sometimes returns position to old index after\n        // moving to the new one. Set position again after delay.\n        setTimeout(() => {\n          this.rlv && this.rlv.scrollToIndex(i, false);\n          this.shifting = false; // debounce\n        }, 800);\n        break;\n      }\n    }\n    this.setState({\n      data,\n      dataProvider: this.dataProvider.cloneWithRows(data),\n    });\n  }\n\n  // Track which dates are visible.\n  onVisibleIndicesChanged = (all, now) => {\n    const {\n      data,\n      numMonths,\n      currentMonth: _currentMonth,\n    } = this.state;\n\n    const {\n      updateMonthYear,\n      onMonthChange,\n    } = this.props;\n\n    // \"now\" contains the inflight indices, whereas \"all\" reflects indices\n    // after scrolling has settled. Prioritize \"now\" for faster header updates.\n    const currentIndex = now[0] || all[0];\n    const currentMonth = data[currentIndex]; // a Moment date\n\n    // Fire month/year update on month changes.  This is\n    // necessary for the header and onMonthChange updates.\n    if (!_currentMonth || !_currentMonth.isSame(currentMonth, 'month')) {\n      const currMonth = currentMonth && currentMonth.clone();\n      onMonthChange && onMonthChange(currMonth);\n    }\n\n    updateMonthYear && updateMonthYear(currentMonth, true);\n\n    if (currentIndex === 0) {\n      this.shiftMonthsBackward(currentMonth);\n    } else if (currentIndex > numMonths - 3) {\n      this.shiftMonthsForward(currentMonth);\n    }\n    this.setState({\n      currentMonth,\n      currentIndex,\n    });\n  }\n\n  onLayout = event => {\n    const containerWidth = event.nativeEvent.layout.width;\n    this.setState({\n      numVisibleItems: Math.floor(containerWidth / this.state.itemWidth),\n      ...this.updateLayout(this.props.renderMonthParams.styles),\n    });\n  }\n\n  rowRenderer = (type, rowMonth, i, extState) => {\n    const { updateMonthYear, renderMonth } = this.props;\n    const { currentMonth: month, currentYear: year } = updateMonthYear(rowMonth);\n    return renderMonth && renderMonth({...extState, month, year});\n  }\n\n  render() {\n    const {\n      data,\n      numMonths,\n      itemHeight: height,\n      itemWidth: width,\n      layoutProvider,\n      dataProvider,\n    } = this.state;\n    if (!data || numMonths === 0 || !height) {\n      return null;\n    }\n    return (\n      <View style={{ width, height }} onLayout={this.onLayout}>\n        <RecyclerListView\n          ref={rlv => this.rlv = rlv}\n          layoutProvider={layoutProvider}\n          dataProvider={dataProvider}\n          rowRenderer={this.rowRenderer}\n          extendedState={this.props.renderMonthParams}\n          initialRenderIndex={this.props.initialRenderIndex}\n          onVisibleIndicesChanged={this.onVisibleIndicesChanged}\n          isHorizontal={this.props.horizontal}\n          scrollViewProps={{\n            showsHorizontalScrollIndicator: false,\n            snapToInterval: this.props.horizontal ? width : height,\n          }}\n        />\n      </View>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;AAOA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAEzC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,gBAAgB,EAAEC,YAAY,EAAEC,cAAc,QAAQ,kBAAkB;AACjF,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAAA,IAEPC,gBAAgB;EAAA;EAAA;EAmBnC,0BAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,MAyEfC,QAAQ,GAAG,UAACC,IAAI,EAAEC,KAAK,EAAK;MAC1B,IAAMC,IAAI,GAAG,MAAKC,KAAK,CAACD,IAAI;MAAC,2BACpBE,CAAC;QACR,IAAIF,IAAI,CAACE,CAAC,CAAC,CAACC,MAAM,CAACL,IAAI,EAAE,OAAO,CAAC,EAAE;UACjC,IAAIC,KAAK,EAAE;YACTK,UAAU,CAAC;cAAA,OAAO,MAAKC,GAAG,IAAI,MAAKA,GAAG,CAACC,aAAa,CAACJ,CAAC,EAAE,KAAK,CAAC;YAAA,GAAEH,KAAK,CAAC;UACxE,CAAC,MACI;YACH,MAAKM,GAAG,IAAI,MAAKA,GAAG,CAACC,aAAa,CAACJ,CAAC,EAAE,KAAK,CAAC;UAC9C;UACA;QACF;MAAC;MATH,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACO,MAAM,EAAEL,CAAC,EAAE,EAAE;QAAA,iBAA7BA,CAAC;QAAA,sBAQN;MAEJ;IACF,CAAC;IAAA,MAGDM,UAAU,GAAG,YAAM;MACjB,kBAA0C,MAAKP,KAAK;QAA5CQ,YAAY,eAAZA,YAAY;QAAEC,eAAe,eAAfA,eAAe;MACrC,IAAID,YAAY,KAAK,CAAC,EAAE;QACtB;MACF;MACA,IAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACJ,YAAY,GAAGC,eAAe,EAAE,CAAC,CAAC;MAC5D,MAAKL,GAAG,IAAI,MAAKA,GAAG,CAACC,aAAa,CAACK,QAAQ,EAAE,IAAI,CAAC;IACpD,CAAC;IAAA,MAGDG,WAAW,GAAG,YAAM;MAClB,mBAAqD,MAAKb,KAAK;QAAvDQ,YAAY,gBAAZA,YAAY;QAAEC,eAAe,gBAAfA,eAAe;QAAEK,SAAS,gBAATA,SAAS;MAChD,IAAMJ,QAAQ,GAAGC,IAAI,CAACI,GAAG,CAACP,YAAY,GAAGC,eAAe,EAAEK,SAAS,GAAG,CAAC,CAAC;MACxE,MAAKV,GAAG,IAAI,MAAKA,GAAG,CAACC,aAAa,CAACK,QAAQ,EAAE,IAAI,CAAC;IACpD,CAAC;IAAA,MAGDM,kBAAkB,GAAG,UAAAC,YAAY,EAAI;MACnC,MAAKC,WAAW,CAACD,YAAY,EAAE,MAAKjB,KAAK,CAACc,SAAS,GAAG,CAAC,CAAC;IAC1D,CAAC;IAAA,MAGDK,mBAAmB,GAAG,UAAAF,YAAY,EAAI;MACpC,MAAKC,WAAW,CAACD,YAAY,EAAE,MAAKjB,KAAK,CAACc,SAAS,GAAG,CAAC,GAAC,CAAC,CAAC;IAC5D,CAAC;IAAA,MAEDI,WAAW,GAAG,UAACD,YAAY,EAAEG,MAAM,EAAK;MACtC,IAAMC,YAAY,GAAGJ,YAAY,CAACK,KAAK,EAAE;MACzC,IAAMC,aAAa,GAAGF,YAAY,CAACC,KAAK,EAAE,CAACE,QAAQ,CAACb,IAAI,CAACc,KAAK,CAACL,MAAM,CAAC,EAAE,QAAQ,CAAC;MACjF,MAAKM,YAAY,CAACL,YAAY,EAAEE,aAAa,CAAC;IAChD,CAAC;IAAA,MAEDG,YAAY,GAAG,UAACL,YAAY,EAAEE,aAAa,EAAK;MAC9C,IAAI,MAAKI,QAAQ,EAAE;QACjB;MACF;MACA,kBAII,MAAKhC,KAAK;QAHZiC,OAAO,eAAPA,OAAO;QACPC,OAAO,eAAPA,OAAO;QACPC,uBAAuB,eAAvBA,uBAAuB;MAEzB,IAAM/B,IAAI,GAAG,EAAE;MACf,IAAIgC,cAAc,GAAGR,aAAa;MAClC,IAAIK,OAAO,IAAIE,uBAAuB,IAAIP,aAAa,CAACS,QAAQ,CAACJ,OAAO,EAAE,OAAO,CAAC,EAAE;QAClFG,cAAc,GAAGtC,MAAM,CAACmC,OAAO,CAAC;MAClC;MACA,KAAK,IAAI3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,MAAKD,KAAK,CAACc,SAAS,EAAEb,CAAC,EAAE,EAAE;QAC7C,IAAIJ,IAAI,GAAGkC,cAAc,CAACT,KAAK,EAAE,CAACW,GAAG,CAAChC,CAAC,EAAE,QAAQ,CAAC;QAClD,IAAI4B,OAAO,IAAIC,uBAAuB,IAAIjC,IAAI,CAACqC,OAAO,CAACL,OAAO,EAAE,OAAO,CAAC,EAAE;UACxE;QACF;QACA9B,IAAI,CAACoC,IAAI,CAACtC,IAAI,CAAC;MACjB;MAEA,IAAIE,IAAI,CAACO,MAAM,GAAG,MAAKX,KAAK,CAACyC,qBAAqB,EAAE;QAClD;MACF;MAAC,6BAGQnC,EAAC;QACR,IAAIF,IAAI,CAACE,EAAC,CAAC,CAACC,MAAM,CAACmB,YAAY,EAAE,OAAO,CAAC,EAAE;UACzC,MAAKM,QAAQ,GAAG,IAAI;UACpB,MAAKvB,GAAG,IAAI,MAAKA,GAAG,CAACC,aAAa,CAACJ,EAAC,EAAE,KAAK,CAAC;UAG5CE,UAAU,CAAC,YAAM;YACf,MAAKC,GAAG,IAAI,MAAKA,GAAG,CAACC,aAAa,CAACJ,EAAC,EAAE,KAAK,CAAC;YAC5C,MAAK0B,QAAQ,GAAG,KAAK;UACvB,CAAC,EAAE,GAAG,CAAC;UACP;QACF;MAAC;MAXH,KAAK,IAAI1B,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGF,IAAI,CAACO,MAAM,EAAEL,EAAC,EAAE,EAAE;QAAA,mBAA7BA,EAAC;QAAA,uBAUN;MAEJ;MACA,MAAKoC,QAAQ,CAAC;QACZtC,IAAI,EAAJA,IAAI;QACJuC,YAAY,EAAE,MAAKA,YAAY,CAACC,aAAa,CAACxC,IAAI;MACpD,CAAC,CAAC;IACJ,CAAC;IAAA,MAGDyC,uBAAuB,GAAG,UAACC,GAAG,EAAEC,GAAG,EAAK;MACtC,mBAII,MAAK1C,KAAK;QAHZD,IAAI,gBAAJA,IAAI;QACJe,SAAS,gBAATA,SAAS;QACK6B,aAAa,gBAA3B1B,YAAY;MAGd,mBAGI,MAAKtB,KAAK;QAFZiD,eAAe,gBAAfA,eAAe;QACfC,aAAa,gBAAbA,aAAa;MAKf,IAAMrC,YAAY,GAAGkC,GAAG,CAAC,CAAC,CAAC,IAAID,GAAG,CAAC,CAAC,CAAC;MACrC,IAAMxB,YAAY,GAAGlB,IAAI,CAACS,YAAY,CAAC;MAIvC,IAAI,CAACmC,aAAa,IAAI,CAACA,aAAa,CAACzC,MAAM,CAACe,YAAY,EAAE,OAAO,CAAC,EAAE;QAClE,IAAM6B,SAAS,GAAG7B,YAAY,IAAIA,YAAY,CAACK,KAAK,EAAE;QACtDuB,aAAa,IAAIA,aAAa,CAACC,SAAS,CAAC;MAC3C;MAEAF,eAAe,IAAIA,eAAe,CAAC3B,YAAY,EAAE,IAAI,CAAC;MAEtD,IAAIT,YAAY,KAAK,CAAC,EAAE;QACtB,MAAKW,mBAAmB,CAACF,YAAY,CAAC;MACxC,CAAC,MAAM,IAAIT,YAAY,GAAGM,SAAS,GAAG,CAAC,EAAE;QACvC,MAAKE,kBAAkB,CAACC,YAAY,CAAC;MACvC;MACA,MAAKoB,QAAQ,CAAC;QACZpB,YAAY,EAAZA,YAAY;QACZT,YAAY,EAAZA;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,MAEDuC,QAAQ,GAAG,UAAAC,KAAK,EAAI;MAClB,IAAMC,cAAc,GAAGD,KAAK,CAACE,WAAW,CAACC,MAAM,CAACC,KAAK;MACrD,MAAKf,QAAQ;QACX5B,eAAe,EAAEE,IAAI,CAACc,KAAK,CAACwB,cAAc,GAAG,MAAKjD,KAAK,CAACqD,SAAS;MAAC,GAC/D,MAAKC,YAAY,CAAC,MAAK3D,KAAK,CAAC4D,iBAAiB,CAACC,MAAM,CAAC,EACzD;IACJ,CAAC;IAAA,MAEDC,WAAW,GAAG,UAACC,IAAI,EAAEC,QAAQ,EAAE1D,CAAC,EAAE2D,QAAQ,EAAK;MAC7C,mBAAyC,MAAKjE,KAAK;QAA3CiD,eAAe,gBAAfA,eAAe;QAAEiB,WAAW,gBAAXA,WAAW;MACpC,uBAAmDjB,eAAe,CAACe,QAAQ,CAAC;QAAtDG,KAAK,oBAAnB7C,YAAY;QAAsB8C,IAAI,oBAAjBC,WAAW;MACxC,OAAOH,WAAW,IAAIA,WAAW,iCAAKD,QAAQ;QAAEE,KAAK,EAALA,KAAK;QAAEC,IAAI,EAAJA;MAAI,GAAE;IAC/D,CAAC;IAvNC,MAAKT,YAAY,GAAG,UAAAW,IAAI,EAAI;MAC1B,IAAMZ,SAAS,GAAGY,IAAI,CAAChB,cAAc;MACrC,IAAIiB,UAAU,GAAGD,IAAI,CAACE,eAAe;MACrC,IAAIF,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACG,UAAU,CAACC,MAAM,EAAE;QAC7CH,UAAU,GAAGD,IAAI,CAACG,UAAU,CAACC,MAAM,GAAG,CAAC;MACzC;MAEA,IAAMC,cAAc,GAAG,IAAI9E,cAAc,CACvC;QAAA,OAAM,CAAC;MAAA,GACP,UAACkE,IAAI,EAAEa,GAAG,EAAK;QACbA,GAAG,CAACnB,KAAK,GAAGC,SAAS;QACrBkB,GAAG,CAACF,MAAM,GAAGH,UAAU;MACzB,CAAC,CACF;MAED,OAAO;QAAEI,cAAc,EAAdA,cAAc;QAAEJ,UAAU,EAAVA,UAAU;QAAEb,SAAS,EAATA;MAAU,CAAC;IAClD,CAAC;IAED,MAAKf,YAAY,GAAG,IAAI/C,YAAY,CAAC,UAACiF,EAAE,EAAEC,EAAE,EAAK;MAC/C,OAAOD,EAAE,KAAKC,EAAE;IAClB,CAAC,CAAC;IAEF,MAAKC,gBAAgB,GAAG,UAAA3E,IAAI,EAAI;MAC9B,OAAO;QACLA,IAAI,EAAJA,IAAI;QACJe,SAAS,EAAEf,IAAI,CAACO,MAAM;QACtBgC,YAAY,EAAE,MAAKA,YAAY,CAACC,aAAa,CAACxC,IAAI;MACpD,CAAC;IACH,CAAC;IAED,MAAKC,KAAK,iDACL,MAAKsD,YAAY,CAAC3D,KAAK,CAAC4D,iBAAiB,CAACC,MAAM,CAAC,GACjD,MAAKkB,gBAAgB,CAAC/E,KAAK,CAACI,IAAI,CAAC;MACpCU,eAAe,EAAE;IAAC,EACnB;IAAC;EACJ;EAAC;IAAA;IAAA,OAED,+BAAsBkE,SAAS,EAAEC,SAAS,EAAE;MAC1C,OAAO,IAAI,CAAC5E,KAAK,CAACD,IAAI,KAAK6E,SAAS,CAAC7E,IAAI,IACvC,IAAI,CAACC,KAAK,CAACkE,UAAU,KAAKU,SAAS,CAACV,UAAU,IAC9C,IAAI,CAAClE,KAAK,CAACqD,SAAS,KAAKuB,SAAS,CAACvB,SAAS,IAC5C,IAAI,CAAC1D,KAAK,CAAC4D,iBAAiB,KAAKoB,SAAS,CAACpB,iBAAiB;IAChE;EAAC;IAAA;IAAA,OAED,4BAAmBoB,SAAS,EAAE;MAC5B,IAAIE,QAAQ,GAAG,CAAC,CAAC;MACjB,IAAIC,WAAW,GAAG,KAAK;MAEvB,IAAI,IAAI,CAACnF,KAAK,CAAC4D,iBAAiB,CAACC,MAAM,KAAKmB,SAAS,CAACpB,iBAAiB,CAACC,MAAM,EAAE;QAC9EsB,WAAW,GAAG,IAAI;QAClBD,QAAQ,GAAG,IAAI,CAACvB,YAAY,CAAC,IAAI,CAAC3D,KAAK,CAAC4D,iBAAiB,CAACC,MAAM,CAAC;MACnE;MAEA,IAAI,IAAI,CAAC7D,KAAK,CAACI,IAAI,KAAK4E,SAAS,CAAC5E,IAAI,EAAE;QACtC+E,WAAW,GAAG,IAAI;QAClBD,QAAQ,mCAAOA,QAAQ,GAAK,IAAI,CAACH,gBAAgB,CAAC,IAAI,CAAC/E,KAAK,CAACI,IAAI,CAAC,CAAC;MACrE;MAEA,IAAIgF,QAAQ,CAACC,EAAE,KAAK,SAAS,IACzB,IAAI,CAACrF,KAAK,CAAC4D,iBAAiB,CAAC0B,iBAAiB,KAAKN,SAAS,CAACpB,iBAAiB,CAAC0B,iBAAiB,EACpG;QAGE,IAAI,CAACrF,QAAQ,CAAC,IAAI,CAACD,KAAK,CAAC4D,iBAAiB,CAAC0B,iBAAiB,EAAE,GAAG,CAAC;MACpE;MAEA,IAAIH,WAAW,EAAE;QACf,IAAI,CAACzC,QAAQ,CAACwC,QAAQ,CAAC;MACzB;IACF;EAAC;IAAA;IAAA,OAoJD,kBAAS;MAAA;MACP,mBAOI,IAAI,CAAC7E,KAAK;QANZD,IAAI,gBAAJA,IAAI;QACJe,SAAS,gBAATA,SAAS;QACGuD,MAAM,gBAAlBH,UAAU;QACCd,KAAK,gBAAhBC,SAAS;QACTiB,cAAc,gBAAdA,cAAc;QACdhC,YAAY,gBAAZA,YAAY;MAEd,IAAI,CAACvC,IAAI,IAAIe,SAAS,KAAK,CAAC,IAAI,CAACuD,MAAM,EAAE;QACvC,OAAO,IAAI;MACb;MACA,OACE,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEjB,KAAK,EAALA,KAAK;UAAEiB,MAAM,EAANA;QAAO,CAAE;QAAC,QAAQ,EAAE,IAAI,CAACtB,QAAS;QAAA,UACtD,KAAC,gBAAgB;UACf,GAAG,EAAE,aAAA3C,GAAG;YAAA,OAAI,MAAI,CAACA,GAAG,GAAGA,GAAG;UAAA,CAAC;UAC3B,cAAc,EAAEkE,cAAe;UAC/B,YAAY,EAAEhC,YAAa;UAC3B,WAAW,EAAE,IAAI,CAACmB,WAAY;UAC9B,aAAa,EAAE,IAAI,CAAC9D,KAAK,CAAC4D,iBAAkB;UAC5C,kBAAkB,EAAE,IAAI,CAAC5D,KAAK,CAACuF,kBAAmB;UAClD,uBAAuB,EAAE,IAAI,CAAC1C,uBAAwB;UACtD,YAAY,EAAE,IAAI,CAAC7C,KAAK,CAACwF,UAAW;UACpC,eAAe,EAAE;YACfC,8BAA8B,EAAE,KAAK;YACrCC,cAAc,EAAE,IAAI,CAAC1F,KAAK,CAACwF,UAAU,GAAG/B,KAAK,GAAGiB;UAClD;QAAE;MACF,EACG;IAEX;EAAC;EAAA;AAAA,EA7Q2CjF,SAAS;AAAlCM,gBAAgB,CAC5B4F,SAAS,GAAG;EACjBvF,IAAI,EAAEV,SAAS,CAACkG,KAAK,CAACC,UAAU;EAChCN,kBAAkB,EAAE7F,SAAS,CAACoG,MAAM;EACpC5B,WAAW,EAAExE,SAAS,CAACqG,IAAI;EAC3BnC,iBAAiB,EAAElE,SAAS,CAACsG,MAAM,CAACH,UAAU;EAC9C5D,OAAO,EAAEvC,SAAS,CAACuG,GAAG;EACtB/D,OAAO,EAAExC,SAAS,CAACuG,GAAG;EACtBxD,qBAAqB,EAAE/C,SAAS,CAACoG,MAAM;EACvCN,UAAU,EAAE9F,SAAS,CAACwG,IAAI;EAC1BjD,eAAe,EAAEvD,SAAS,CAACqG,IAAI;EAC/B7C,aAAa,EAAExD,SAAS,CAACqG;AAC3B,CAAC;AAZkBhG,gBAAgB,CAc5BoG,YAAY,GAAG;EACpB/F,IAAI,EAAE,EAAE;EACRwD,iBAAiB,EAAE;IAAEC,MAAM,EAAE,CAAC;EAAE;AAClC,CAAC;AAAA,SAjBkB9D,gBAAgB"},"metadata":{},"sourceType":"module"}